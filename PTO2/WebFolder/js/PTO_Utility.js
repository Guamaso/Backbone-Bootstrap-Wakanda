var PTO = (function() {	var ptoUtilObj = {}; //This is the object we will return to create our module.	//P R I V A T E   M E T H O D S   (S T A R T).    //P R I V A T E   M E T H O D S   (E N D).            //Backbone Objects.    ptoUtilObj.Models = {};     ptoUtilObj.Collections = {};     ptoUtilObj.Views = {};     ptoUtilObj.Router = {};     //Other stuff.    ptoUtilObj.Utility = {};     //Basic Pub Sub model.    //May be useful in our Backbone router.    ptoUtilObj.vent = _.extend({}, Backbone.Events);    ptoUtilObj.wakandaQueryURLString = function (configObj) {        var urlString = "rest/" + configObj.dataClass + "/";        urlString += "?$top=" + configObj.top;        urlString += "&$filter='" + encodeURIComponent(configObj.filter) + "'";        urlString += encodeURI("&$params='[");        //Build params.        var parmsString = "";        for(var arg = 1, len = arguments.length; arg < len; ++ arg) {            var parm = arguments[arg];            if (_.isString(parm)) {                parmsString += "\"" + parm + "\"";            } else if (_.isNumber(parm)) {            } else if (_.isDate(parm)) {                parmsString += "\"" + moment().format() + "\"";            }            if (arg < len -1) {               parmsString += ",";             }        } //end - for.        urlString += encodeURIComponent(parmsString);        urlString += encodeURI("]'");        // urlString += encodeURI("&$params='[") + encodeURIComponent(configObj.params) + encodeURI("]'");        urlString += "&$method=entityset&$timeout=" + configObj.timeout;        //Hack Refactor        if (configObj.dataClass == "Request") {urlString += "&$expand=owner, owner.myManager";}                return urlString;    }	return ptoUtilObj;   }()); //end - PTO.