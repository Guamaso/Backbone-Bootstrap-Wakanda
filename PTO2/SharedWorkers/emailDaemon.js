/*** @author david robbins <drobbins@4d.com>*//*  Here, we add the "onconnect" function to this worker (== to this .js file)It's in this function that we receive messages from other threads, other workers,asking us to do something*/function onconnect(msg) { // called when a new SharedWorker is created.	var promoteToken = currentSession().promoteWith("Internal"); //temporarily make this session Internal level.	 // In a SharedWorker, we get the communication port in evt.ports[0]    var thePort = msg.ports[0];        thePort.onmessage = function(messageEvt)    {		// The message is in the "data" member of the argument	    var message = messageEvt.data;	   	// The caller is supposed to have set a "what" property, to tell us what	   	// he wants us to do. We dispatch the message and act accordingly.	   	// Notice that the caller can set more properties in messageEvt.	   		   	switch(message.what) 	    {			case 'requestPTOSendMail':			try             {            	var requestorID = message.requestorID,            		theRequestor = ds.User(requestorID);            	            	if (theRequestor.myManager) {            		var requestID = message.requestID,            		myManager = theRequestor.myManager,            		myManagerEmail = myManager.email,            		approvePassword = message.approvePassword,                    approveID = message.approveID,		        	username = 'wakandaptodemo', // enter a valid account here		        	password = '01Wakanda01',  // enter a valid password here		        	address = 'smtp.gmail.com',		        	port = 465, // SSL port		        	mail = require('waf-mail/mail'),		        	recip = new Array(myManagerEmail), //recip = "drobbins@4d.com",		        	res = null,		        	messageBody = "",		        	mailMessage = new mail.Mail(),		        			        	//192.241.155.204		        	//		        	ptoApprovalURL = "http://127.0.0.1:8081/ptoApproval/" + requestID + "/" + approvePassword + "/" + approveID + "/approve";//		        	ptoRejectURL = "http://127.0.0.1:8081/ptoApproval/" + requestID + "/" + approvePassword + "/" + approveID + "/reject";		        	ptoApprovalURL = "http://192.241.155.204:8081/ptoApproval/" + requestID + "/" + approvePassword + "/" + approveID + "/approve";		        	ptoRejectURL = "http://192.241.155.204:8081/ptoApproval/" + requestID + "/" + approvePassword + "/" + approveID + "/reject";		        						//ptoApprovalURL = "http://" + httpServer.ipAddress + ":" + httpServer.port + "/ptoApproval/" + requestID + "/" + approvePassword + "/" + approveID + "/approve";		        	//ptoRejectURL = "http://" + httpServer.ipAddress + ":" + httpServer.port + "/ptoApproval/" + requestID + "/" + approvePassword + "/" + approveID + "/reject";		        			        //message body start	                messageBody = '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">';		                messageBody += '<html xmlns="http://www.w3.org/1999/xhtml">';	                messageBody += '<meta name="viewport" content="width=device-width, initial-scale=1.0"/>';	                messageBody += '<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />';	                messageBody += '<title>PTO Request</title>';	                messageBody += '<style type="text/css">';	                messageBody += 'a {';	                messageBody += 'text-decoration: none;';	                messageBody += 'font-weight: bold;';	                messageBody += 'color: #6699CC;';	                messageBody += '}';	                	                messageBody += '#wrapDiv {';	                messageBody += 'width: 100%;';	                messageBody += 'background-color:#FFFFFF;';	                messageBody += 'border:1px solid #DFDFDF;';	                messageBody += 'padding: 3px;';	                messageBody += 'color: #202020;';	                messageBody += 'font-size: 14px;';	                messageBody += '}';	                messageBody += '#bannerDiv {';	                messageBody += 'background-color:#B0C4DE;';	                messageBody += 'color: #FFFFFF;';	                messageBody += 'padding: 5px 12px;';	                messageBody += 'font-size:22px;';	                messageBody += '}';	                	                messageBody += '#messageDiv {';	                messageBody += 'padding: 10px';	                messageBody += '}';	                messageBody += '</style>';	                messageBody += '<head>';	                messageBody += '</head>';	                	                	                messageBody += '<body>';	                messageBody += '<div id="wrapDiv">';	               	                messageBody += '<div id="bannerDiv">';	                messageBody += '<p>4D US - Paid Time Off Request</p>';	                messageBody += '</div>';	                	                messageBody += '<div id="messageDiv">';	                messageBody += '<p>';	                messageBody += myManager.fullName + "," ;	                messageBody += '</p>';	                messageBody += '<p>';	                messageBody += '<strong>';	                messageBody += theRequestor.fullName;	                messageBody += '</strong>';	                messageBody += " has requested " + message.hours + " hours " + message.comp + " on ";	                messageBody += PTO.moment(message.dateString).format('dddd') + " " + message.dateString + ".";	                //messageBody += '</br>(request id: ' + requestID + ')<br/>';	                messageBody += '</p>';	                	                	                messageBody += '<p>';	                messageBody += '<a href="' + ptoRejectURL + '">Reject PTO</a>';	                messageBody += '</p>';	                	                messageBody += '<p>';	                messageBody += '<a href="' + ptoApprovalURL + '">Approve PTO</a>';	                messageBody += '</p>';	                	    	                	                messageBody += '<p>';	                messageBody += '(request id: ' + requestID + ')';	                messageBody += '</p>';	                	                	                messageBody += '</div>'; //messageDiv	                                	                messageBody += '</div>';//wrapDiv	                messageBody += '</body>';	                messageBody += '</html>';	                //message body end	                			        mailMessage.setBodyType("text/html");			        mailMessage.from= username + '@gmail.com';			        mailMessage.to=recip;			        mailMessage.subject = "PTO Request from " + theRequestor.fullName + ".";			        mailMessage.setBodyTypeToHTML();			        mailMessage.setBody(messageBody); 			        res = mailMessage.send(address, port , true, username, password);			 	} //end - if (theRequestor.myManager).			} 						catch (err)            {    	            new ds.Log({	                createDate: new Date(), 	                kind: "throw error",	                errorMsg: err.message,	                dataClassName: "Email Daemon",	                userName: "Email Daemon"	            }).save();            }	        break;	        	        	        	        	    	case 'statusPTOSendMail':	    	try	    	{	    		var requestStatus = message.requestStatus,	    			requestID = message.requestID,	    			requestorID = message.requestorID;	    			    			new ds.Log({	                createDate: new Date(), 	                kind: "throw error 100",	                errorMsg: err.message,	                dataClassName: "Email Daemon",	                userName: "Email Daemon",	                dataClassName: requestID	            }).save();	                			var theRequestor = ds.User(requestorID);    			    			new ds.Log({	                createDate: new Date(), 	                kind: "throw error 200",	                errorMsg: err.message,	                dataClassName: "Email Daemon",	                userName: "Email Daemon",	                dataClassName: requestID	            }).save();    			    			var theRequestorEmail = theRequestor.email,    			username = 'wakandaptodemo', // enter a valid account here	        	password = '01Wakanda01',  // enter a valid password here	        	address = 'smtp.gmail.com',	        	port = 465, // SSL port	        	mail = require('waf-mail/mail'),	        	recip = new Array(theRequestorEmail),	        	res = null,	        	messageBody = "";	        		        		        	new ds.Log({	                createDate: new Date(), 	                kind: "throw error 300",	                errorMsg: err.message,	                dataClassName: "Email Daemon",	                userName: "Email Daemon",	                dataClassName: requestID	            }).save();	        		        	var mailMessage = new mail.Mail();	        		        	new ds.Log({	                createDate: new Date(), 	                kind: "throw error 400",	                errorMsg: err.message,	                dataClassName: "Email Daemon",	                userName: "Email Daemon",	                dataClassName: requestID	            }).save();    			    			//message body start    			/**/                messageBody = '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">';	                messageBody += '<html xmlns="http://www.w3.org/1999/xhtml">';                messageBody += '<meta name="viewport" content="width=device-width, initial-scale=1.0"/>';                messageBody += '<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />';                messageBody += '<title>PTO Request</title>';                messageBody += '<style type="text/css">';                messageBody += 'a {';                messageBody += 'text-decoration: none;';                messageBody += 'font-weight: bold;';                messageBody += 'color: #6699CC;';                messageBody += '}';                                messageBody += '#wrapDiv {';                messageBody += 'width: 100%;';                messageBody += 'background-color:#FFFFFF;';                messageBody += 'border:1px solid #DFDFDF;';                messageBody += 'padding: 3px;';                messageBody += 'color: #202020;';                messageBody += 'font-size: 14px;';                messageBody += '}';                messageBody += '#bannerDiv {';                messageBody += 'background-color:#B0C4DE;';                messageBody += 'color: #FFFFFF;';                messageBody += 'padding: 5px 12px;';                messageBody += 'font-size:22px;';                messageBody += '}';                                messageBody += '#messageDiv {';                messageBody += 'padding: 10px';                messageBody += '}';                messageBody += '</style>';                messageBody += '<head>';                messageBody += '</head>';                                                messageBody += '<body>';                messageBody += '<div id="wrapDiv">';                               messageBody += '<div id="bannerDiv">';                messageBody += '<p>4D US - Paid Time Off Request</p>';                messageBody += '</div>';                                messageBody += '<div id="messageDiv">';                messageBody += '<p>';                messageBody += theRequestor.fullName + "," ;                messageBody += '</p>';                messageBody += '<p>';                messageBody += " Your request for " + message.hours + " hours " + message.comp + " on ";                messageBody += PTO.moment(message.dateString).format('dddd') + " " + message.dateString + " has been " + requestStatus + ".";                messageBody += '</br>(request id: ' + requestID + ')<br/>';                messageBody += '</p>';                                messageBody += '</div>'; //messageDiv                                                messageBody += '</div>';//wrapDiv                messageBody += '</body>';                messageBody += '</html>';                                //message body end                                mailMessage.setBodyType("text/html");		        mailMessage.from= username + '@gmail.com';		        mailMessage.to=recip;		        mailMessage.subject = "Your PTO Request for " + message.dateString + " has been " + requestStatus + ".";		        mailMessage.setBodyTypeToHTML();		        mailMessage.setBody(messageBody); 		        //mailMessage.setBody(messageBody); 		        res = mailMessage.send(address, port , true, username, password);		    	}	    		    	catch (err)            {    	            new ds.Log({	                createDate: new Date(), 	                kind: "throw error",	                errorMsg: err.message,	                dataClassName: "Email Daemon Status",	                userName: "Email Daemon Status"	            }).save();            }	        break;	       	        	        		} //end - switch(message.what).               } //end - thePort.onmessage = function(messageEvt).       	currentSession().unPromote(promoteToken); //put the session back to normal.     } //end - function onconnect(msg).